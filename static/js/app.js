// Generated by CoffeeScript 1.4.0

(function($) {
  var Book, BookView, Library, LibraryView, books, libraryView;
  books = [
    {
      title: "JS the good parts",
      author: "John Doe",
      releaseDate: "2012",
      keywords: "JavaScript"
    }, {
      title: "CS the better parts",
      author: "John Doe",
      releaseDate: "2012",
      keywords: "CoffeeScript"
    }, {
      title: "Scala for the impatient",
      author: "John Doe",
      releaseDate: "2012",
      keywords: "Scala"
    }, {
      title: "American Psyco",
      author: "Bret Easton Ellis",
      releaseDate: "2012",
      keywords: "Novel"
    }, {
      title: "Eloquent JavaScript",
      author: "John Doe",
      releaseDate: "2012",
      keywords: "JavaScript"
    }
  ];
  Book = Backbone.Model.extend({
    defaults: {
      coverImage: "/static/img/placeholder.jpg",
      title: "No title",
      author: "Unknown",
      releaseDate: "Unknown",
      keywords: "None"
    }
  });
  BookView = Backbone.View.extend({
    tagName: "div",
    className: "bookContainer",
    template: $("#bookTemplate").html(),
    render: function() {
      var tmpl;
      tmpl = _.template(this.template);
      this.$el.html(tmpl(this.model.toJSON()));
      return this;
    },
    events: {
      "click .delete": "deleteBook"
    },
    deleteBook: function() {
      this.model.destroy();
      return this.remove();
    }
  });
  Library = Backbone.Collection.extend({
    model: Book
  });
  LibraryView = Backbone.View.extend({
    el: $("#books"),
    initialize: function() {
      this.collection = new Library(books);
      this.render();
      this.collection.on("add", this.renderBook, this);
      return this.collection.on("remove", this.removeBook, this);
    },
    render: function() {
      var that;
      that = this;
      return _.each(this.collection.models, (function(item) {
        return that.renderBook(item);
      }), this);
    },
    addBook: function(e) {
      var formData;
      e.preventDefault();
      formData = {};
      $("#addBook div").children("input").each(function(i, el) {
        if ($(el).val() !== "") {
          return formData[el.id] = $(el).val();
        }
      });
      books.push(formData);
      return this.collection.add(new Book(formData));
    },
    removeBook: function(removedBook) {
      var removedBookData;
      removedBookData = removedBook.attributes;
      _.each(removedBookData, function(val, key) {
        if (removedBookData[key] === removedBook.defaults[key]) {
          return delete removedBookData[key];
        }
      });
      return _.each(books, function(book) {
        if (_.isEqual(book, removedBookData)) {
          return books.splice(_.indexOf(books, book), 1);
        }
      });
    },
    events: {
      "click #add": "addBook"
    },
    renderBook: function(item) {
      var bookView;
      bookView = new BookView({
        model: item
      });
      return this.$el.append(bookView.render().el);
    }
  });
  return libraryView = new LibraryView();
})(jQuery);
